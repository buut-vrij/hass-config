##
# alarm_intrusion.yaml
#
# Automations for arming/triggering/disarming the alarm when sensors detect intrusion (motion/opening)
#
# @category   Home Assistant
# @package    Automations-scripts
# @author     Jeroen Butenaerts
# @version    1.0
##
automation:
  ##
  # Sync virtual alarm with physical alarm
  ##
  - alias: 'Sync virtual alarm with physical alarm'
    initial_state: on
    trigger:
      # When the state of the physical alarm is changed
      platform: state
      entity_id: alarm_control_panel.woonveilig
    action:
      # Then activate the same state on the virtual alarm
      service_template: >
        {% if is_state('alarm_control_panel.woonveilig', 'armed_away') %}
          alarm_control_panel.alarm_arm_away
        {% elif is_state('alarm_control_panel.woonveilig', 'armed_home') %}
          alarm_control_panel.alarm_arm_home
        {% elif is_state('alarm_control_panel.woonveilig', 'armed_night') %}
          alarm_control_panel.alarm_arm_night
        {% elif is_state('alarm_control_panel.woonveilig', 'disarmed') %}
          alarm_control_panel.alarm_disarm
        {% elif is_state('alarm_control_panel.woonveilig', 'triggered') %}
          alarm_control_panel.alarm_trigger
        {% endif %}
      entity_id: alarm_control_panel.virtual_alarm

  ##
  # Alarm arm away on no person home
  ##
  - alias: 'Alarm arm away on no person home'
    initial_state: on
    trigger:
      # When no person is home since 1 hour
      platform: state
      entity_id: binary_sensor.person_any_home
      to: 'off'
      for:
        hours: 1
    condition:
      # While the alarm is set to disarmed
      condition: state
      entity_id: alarm_control_panel.woonveilig
      state: 'disarmed'
    action:
      # Then set alarm to armed away
      service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.woonveilig

  ##
  # Alarm disarm on iOS action
  ##
  - alias: 'Alarm disarm on iOS action'
    initial_state: on
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: 'ALARM_DISARM'
    action:
      service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.woonveilig

  ##
  # Catch sensor event when alarm armed away
  ##
  - alias: 'Catch sensor event when alarm armed away'
    initial_state: on
    trigger:
      # When a sensor is triggered
      platform: state
      entity_id:
        - binary_sensor.door_window_sensor_158d0001ab5797 # Study room window
        - binary_sensor.door_window_sensor_158d0001ab5853 # Guest room window
        - binary_sensor.door_window_sensor_158d0001b77e9a # Kitchen window right
        - binary_sensor.door_window_sensor_158d0001b77eb1 # Bedroom window
        - binary_sensor.door_window_sensor_158d0001c0e526 # Door landing downstairs-garage
        - binary_sensor.door_window_sensor_158d0001dcce33 # Door landing downstairs-boiler room
        - binary_sensor.door_window_sensor_158d0001d934e3 # Kitchen window left
        - binary_sensor.door_window_sensor_158d0001d8228c # Dressing room window
        - binary_sensor.door_window_sensor_158d0001f38318 # Garden doors
        - binary_sensor.door_window_sensor_158d0001f38976 # Front door
        - binary_sensor.door_window_sensor_158d00019fd4c6 # Garage door
        - binary_sensor.motion_sensor_158d0002ec3208 # Garage
#        - binary_sensor.motion_sensor_158d0002ec7d7a # Landing downstairs
        - binary_sensor.motion_sensor_158d0002e275a0 # Living room dining
        - binary_sensor.motion_sensor_158d0002e275dd # Boiler room
        - binary_sensor.motion_sensor_158d0002e29c77 # Entryway
        - binary_sensor.motion_sensor_158d00032be5bd # Living room living
        - binary_sensor.motion_sensor_158d000257a816 # Kitchen
        - binary_sensor.motion_sensor_158d000257a829 # Garage
        - binary_sensor.motion_sensor_158d000257b63f # Landing upstairs
      to: 'on'
    condition:
      # While the virtual alarm is set to armed away
      condition: state
      entity_id: alarm_control_panel.virtual_alarm
      state: 'armed_away'
    action:
      # Then call the throw_intrusion_alarm_trigger_event script
      service: script.throw_intrusion_alarm_trigger_event
      data_template:
        alarm_sensor_class: "{{ trigger.to_state.attributes.device_class }}"
        alarm_sensor_name: "{{ trigger.to_state.attributes.friendly_name }}"

  ##
  # Catch sensor event when alarm armed home
  ##
  - alias: 'Catch sensor event when alarm armed home'
    initial_state: on
    trigger:
      # When a sensor is triggered
      platform: state
      entity_id:
        - binary_sensor.door_window_sensor_158d0001ab5797 # Study room window
        - binary_sensor.door_window_sensor_158d0001ab5853 # Guest room window
        - binary_sensor.door_window_sensor_158d0001b77e9a # Kitchen window right
        - binary_sensor.door_window_sensor_158d0001b77eb1 # Bedroom window
        - binary_sensor.door_window_sensor_158d0001c0e526 # Door landing downstairs-garage
        - binary_sensor.door_window_sensor_158d0001dcce33 # Door landing downstairs-boiler room
        - binary_sensor.door_window_sensor_158d0001d934e3 # Kitchen window left
        - binary_sensor.door_window_sensor_158d0001d8228c # Dressing room window
        - binary_sensor.door_window_sensor_158d0001f38318 # Garden doors
        - binary_sensor.door_window_sensor_158d0001f38976 # Front door
        - binary_sensor.door_window_sensor_158d00019fd4c6 # Garage door
      to: 'on'
    condition:
      # While the virtual alarm is set to armed home
      condition: state
      entity_id: alarm_control_panel.virtual_alarm
      state: 'armed_home'
    action:
      # Then call the throw_intrusion_alarm_trigger_event script
      service: script.throw_intrusion_alarm_trigger_event
      data_template:
        alarm_sensor_class: "{{ trigger.to_state.attributes.device_class }}"
        alarm_sensor_name: "{{ trigger.to_state.attributes.friendly_name }}"

  ##
  # Catch sensor event when alarm armed night
  ##
  - alias: 'Catch sensor event when alarm armed night'
    initial_state: on
    trigger:
      # When a sensor is triggered
      platform: state
      entity_id:
        - binary_sensor.door_window_sensor_158d0001b77e9a # Kitchen window right
        - binary_sensor.door_window_sensor_158d0001c0e526 # Door landing downstairs-garage
        - binary_sensor.door_window_sensor_158d0001dcce33 # Door landing downstairs-boiler room
        - binary_sensor.door_window_sensor_158d0001d934e3 # Kitchen window left
        - binary_sensor.door_window_sensor_158d0001f38318 # Garden doors
        - binary_sensor.door_window_sensor_158d0001f38976 # Front door
        - binary_sensor.door_window_sensor_158d00019fd4c6 # Garage door
        - binary_sensor.motion_sensor_158d0002ec3208 # Garage
#        - binary_sensor.motion_sensor_158d0002ec7d7a # Landing downstairs
        - binary_sensor.motion_sensor_158d0002e275a0 # Living room dining
        - binary_sensor.motion_sensor_158d0002e275dd # Boiler room
        - binary_sensor.motion_sensor_158d0002e29c77 # Entryway
        - binary_sensor.motion_sensor_158d00032be5bd # Living room living
        - binary_sensor.motion_sensor_158d000257a816 # Kitchen
        - binary_sensor.motion_sensor_158d000257a829 # Garage
      to: 'on'
    condition:
      # While the virtual alarm is set to armed night
      condition: state
      entity_id: alarm_control_panel.virtual_alarm
      state: 'armed_night'
    action:
      # Then call the throw_intrusion_alarm_trigger_event script
      service: script.throw_intrusion_alarm_trigger_event
      data_template:
        alarm_sensor_class: "{{ trigger.to_state.attributes.device_class }}"
        alarm_sensor_name: "{{ trigger.to_state.attributes.friendly_name }}"

  ##
  # Throw intrusion alarm disarm event
  ##
  - alias: 'Throw intrusion alarm disarm event when virtual alarm disarmed'
    initial_state: on
    trigger:
      # When the virtual alarm is set to disarmed
      platform: state
      entity_id: alarm_control_panel.virtual_alarm
      to: 'disarmed'
    action:
      # Then throw the alarm_disarmed event
      event: alarm_disarmed

script:
  ##
  # Throw delayed intrusion alarm trigger event
  ##
  throw_intrusion_alarm_trigger_event_delayed:
    alias: 'Throw delayed intrusion alarm trigger event'
    sequence:
      # Delay
      - delay:
        seconds: "{{ input_number.alarm_entry_delay_time }}"
      # Check if alarm is still armed
      - condition: template
        value_template: "{{ states('alarm_control_panel.virtual_alarm') != 'disarmed' }}"
      # Call the throw_intrusion_alarm_trigger_event script
      - service: script.throw_intrusion_alarm_trigger_event
        data_template:
          alarm_sensor_class: "{{ alarm_sensor_class }}"
          alarm_sensor_name: "{{ alarm_sensor_name }}"

  ##
  # Throw intrusion alarm trigger event
  ##
  throw_intrusion_alarm_trigger_event:
    alias: 'Throw intrusion alarm trigger event'
    sequence:
      # Set alarm state to trigger
      - service: alarm_control_panel.alarm_trigger
        entity_id: alarm_control_panel.virtual_alarm
      # Throw the alarm_trigger event
      - event: alarm_trigger
        event_data_template:
          alarm_trigger_class: >
            {% if alarm_sensor_class in ['door', 'window'] %}
              opening
            {% else %}
              {{ alarm_sensor_class }}
            {% endif %}
          alarm_trigger_name: >
            {% if alarm_sensor_class == 'motion' %}
              {{ alarm_sensor_name|replace('Beweging ', '')|lower() }}
            {% else %}
              {{ alarm_sensor_name|lower() }}
            {% endif %}

##
# Customize
##
homeassistant:
  customize:
    automation.alarm_arm_away_on_no_person_home:
      friendly_name: 'Alarm inschakelen wanneer niemand thuis'
      hidden: true

    automation.alarm_disarm_on_ios_action:
      friendly_name: 'Alarm uitschakelen per iOS actie'
      hidden: true

    automation.sync_virtual_alarm_with_physical_alarm:
      friendly_name: 'Status virtueel en fysiek alarm synchroniseren'
      hidden: true

    automation.catch_sensor_event_when_alarm_armed_away:
      friendly_name: 'Registratie sensor opvangen bij virtueel alarm ingeschakeld weg'
      hidden: true

    automation.catch_sensor_event_when_alarm_armed_home:
      friendly_name: 'Registratie sensor opvangen bij virtueel alarm ingeschakeld thuis'
      hidden: true

    automation.catch_sensor_event_when_alarm_armed_night:
      friendly_name: 'Registratie sensor opvangen bij virtueel alarm ingeschakeld nacht'
      hidden: true

    automation.throw_intrusion_alarm_disarm_event_when_virtual_alarm_disarmed:
      friendly_name: 'Geef melding wanneer virtueel alarm wordt uitgeschakeld'
      hidden: true

    script.throw_intrusion_alarm_trigger_event:
      friendly_name: 'Geef alarmmelding inbraak'
      hidden: true

    script.throw_intrusion_alarm_trigger_event_delayed:
      friendly_name: 'Geef vertraagde alarmmelding inbraak'
      hidden: true
