##
# light_all_presence_simulation.yaml
#
# Switch lights on/off to simulate presence
#
# https://github.com/mf-social/Home-Assistant/blob/master/homeassistant/packages/system/background/mockupancy.yaml
#
# @category   Home Assistant
# @package    Automations
# @author     Jeroen Butenaerts
# @version    1.0
##
input_datetime:
  light_all_presence_simulation_arrivaltime:
    has_date: false
    has_time: true
    initial: '17:30'
  light_all_presence_simulation_departuretime:
    has_date: false
    has_time: true
    initial: '08:30'
  light_all_presence_simulation_sleeptime:
    has_date: false
    has_time: true
    initial: '23:00'
  light_all_presence_simulation_waketime:
    has_date: false
    has_time: true
    initial: '07:00'

##
# Automations
##
automation:
  ##
  # Start presence simulation moring routine
  ##
  - alias: 'Light all presence simulation morning start'
    initial_state: on
    trigger:
      # When outside luminance is below 1000 lux
      - platform: template
        value_template: "{{ states('sensor.sensative_strips_comfort_luminance')|int < 1000 }}"
      # And current time is equal to/has passed preset wakeup time
      - platform: template
        value_template: "{{ states('sensor.time') >= state_attr('input_datetime.light_all_presence_simulation_waketime', 'timestamp')|int|timestamp_custom('%H:%M', false) }}"
    condition:
      # While outside luminance is below 1000 lux
      - condition: template
        value_template: "{{ (states('sensor.sensative_strips_comfort_luminance')|int) < 1000 }}"
      # And current time is equal to/has passed preset wakeup time
      - condition: template
        value_template: "{{ states('sensor.time') >= state_attr('input_datetime.light_all_presence_simulation_waketime', 'timestamp')|int|timestamp_custom('%H:%M', false) }}"
      # And presence simulation is enabled
      - condition: state
        entity_id: input_boolean.person_presence_simulation_active
        state: 'on'
    action:
      # Then start the presence simulation morning routine
      service: script.turn_on
      entity_id: script.light_all_presence_simulation_morning_routine

  ##
  # Start presence simulation evening routine
  ##
  - alias: 'Light all presence simulation evening start'
    initial_state: on
    trigger:
      # When outside luminance is below 1000 lux
      - platform: template
        value_template: "{{ states('sensor.sensative_strips_comfort_luminance')|int < 1000 }}"
      # And current time is equal to/has passed preset arrival home time
      - platform: template
        value_template: "{{ states('sensor.time') >= state_attr('input_datetime.light_all_presence_simulation_arrivaltime', 'timestamp')|int|timestamp_custom('%H:%M', false) }}"
    condition:
      # While outside luminance is below 1000 lux
      - condition: template
        value_template: "{{ (states('sensor.sensative_strips_comfort_luminance')|int) < 1000 }}"
      # And current time is equal to/has passed preset arrival home time
      - condition: template
        value_template: "{{ states('sensor.time') >= state_attr('input_datetime.light_all_presence_simulation_arrivaltime', 'timestamp')|int|timestamp_custom('%H:%M', false) }}"
      # And presence simulation is enabled
      - condition: state
        entity_id: input_boolean.person_presence_simulation_active
        state: 'on'
    action:
      # Start the presence simulation evening routine
      service: script.turn_on
      entity_id: script.light_all_presence_simulation_evening_routine

  ##
  # Stop presence simulation routine
  ##
  - alias: 'Light all presence simulation stop'
    initial_state: on
    trigger:
      # When outside luminance is above 1000 lux
      - platform: template
        value_template: "{{ states('sensor.sensative_strips_comfort_luminance')|int >= 1000 }}"
    condition:
      # While presence simulation is enabled
      - condition: state
        entity_id: input_boolean.person_presence_simulation_active
        state: 'on'
    action:
      # Stop all presence simulation routines
      service: homeassistant.turn_off
      entity_id:
        - script.light_all_presence_simulation_morning_routine
        - script.light_all_presence_simulation_evening_routine

script:
  ##
  # Presence simulation moring routine
  # 
  # Minimum duration 1928 s, maximum duration 2925 s
  ##
  light_all_presence_simulation_morning_routine:
    alias: 'Light all presence simulation morning routine'
    sequence:
    # Getting up
      # Turn on bedside lamp
      # Delay 10~60 seconds
      # Turn on bedroom ceiling light
      # Turn off bedside lamp
      # Delay 1~10 seconds
    # Going to the bathroom
      # Turn on upstairs landing ceiling light
      # Delay 1~5 seconds
      # Turn on bathroom ceiling light
      # Delay 10~60 seconds
      # Turn off bathroom ceiling light
      # Delay 5~10 seconds
      # Turn off bedroom ceiling light
      # Delay 5~10 seconds
      # Turn off upstairs landing ceiling light
    # Entering ground floor
      # Turn on standing lamp
      - service: light.turn_on
        data:
          entity_id: light.livingwhites_plug_1
          brightness: 100
      # Delay 5~10 seconds
      - delay: "00:00:{{ range(5,10)|random|int }}"
    # Preparing breakfast
      # Turn on kitchen countertop lights
      - service: light.turn_on
        data:
          entity_id: light.werkbladverlichting
          brightness: 255
      # Delay 5~8 minutes
      - delay: "00:{{ range(5,7)|random|int }}:{{ range(1,59)|random|int }}"
    # Eating breakfast
      # Turn on dining table light
      - service: light.turn_on
        data:
          entity_id: light.fibaro_system_fgd212_dimmer_2_level_2
          brightness: 200
      # Delay 15~20 minutes
      - delay: "00:{{ range(15,19)|random|int }}:{{ range(1,59)|random|int }}"
    # Cleaning up
      # Turn off dining table light
      - service: light.turn_off
        entity_id: light.fibaro_system_fgd212_dimmer_2_level_2
      # Delay 10~30 seconds
      - delay: "00:00:{{ range(10,30)|random|int }}"
      # Turn off kitchen countertop lights
      - service: light.turn_off
        entity_id: light.werkbladverlichting
      # Delay 1~10 seconds
      - delay: "00:00:{{ range(1,10)|random|int }}"
      # Turn off standing lamp
      - service: light.turn_off
        entity_id: light.livingwhites_plug_1
    # Showering
      # Turn on upstairs landing ceiling light
      # Delay 5~10 seconds
      - delay: "00:00:{{ range(5,10)|random|int }}"
      # Turn on bathroom ceiling light
      # Delay 10~15 minutes
      - delay: "00:{{ range(10,14)|random|int }}:{{ range(1,59)|random|int }}"
      # Turn off bathroom ceiling light
      # Delay 5~10 seconds
      - delay: "00:00:{{ range(5,10)|random|int }}"
    # Getting dressed
      # Turn on dressing room ceiling light
      # Delay 1~2 minutes
      - delay: "00:01:{{ range(1,59)|random|int }}"
      # Turn off dressing room ceiling light
      # Delay 10~20 seconds
      - delay: "00:00:{{ range(10,20)|random|int }}"
      # Turn off upstairs landing ceiling light
    # Waiting
      # Turn on dining table light
      - service: light.turn_on
        data:
          entity_id: light.fibaro_system_fgd212_dimmer_2_level_2
          brightness: 150
      # Wait
      - wait_template: "{{ states('sensor.time') == state_attr('input_datetime.light_all_presence_simulation_departuretime', 'timestamp')|int|timestamp_custom('%H:%M', false) }}"
    # Leaving home
      # Turn off dining table light
      - service: light.turn_off
        entity_id: light.fibaro_system_fgd212_dimmer_2_level_2
      # Delay 1~5 seconds
      - delay: "00:00:{{ range(1,5)|random|int }}"
      # Turn off standing lamp
      - service: light.turn_off
        entity_id: light.livingwhites_plug_1
      # Delay 1~5 seconds
      - delay: "00:00:{{ range(1,5)|random|int }}"
      # Turn on downstairs landing ceiling light
      - service: light.turn_on
        entity_id: light.fibaro_system_fgd212_dimmer_2_level_15
      # Delay 1~5 minutes
      - delay: "00:{{ range(1,4)|random|int }}:{{ range(1,59)|random|int }}"
      # Turn off downstairs landing ceiling light
      - service: light.turn_off
        entity_id: light.fibaro_system_fgd212_dimmer_2_level_15

  ##
  # Presence simulation evening routine
  ##
  light_all_presence_simulation_evening_routine:
    alias: 'Light all presence simulation evening routine'
    sequence:
    # Arriving home
      # Turn on downstairs landing ceiling light
      - service: light.turn_on
        entity_id: light.fibaro_system_fgd212_dimmer_2_level_15
      # Delay 1~5 minutes
      - delay: "00:{{ range(1,4)|random|int }}:{{ range(1,59)|random|int }}"
      # Turn on standing lamp
      - service: light.turn_on
        data:
          entity_id: light.livingwhites_plug_1
          brightness: 100
      # Delay 1~10 seconds
      - delay: "00:00:{{ range(1,10)|random|int }}"
      # Turn off downstairs landing ceiling light
      - service: light.turn_off
        entity_id: light.fibaro_system_fgd212_dimmer_2_level_15
      # Delay 1~10 seconds
      - delay: "00:00:{{ range(1,10)|random|int }}"
      # Turn on display cabinet lights
      - service: light.turn_on
        data:
          entity_id: light.kastverlichting
          brightness: 255
    # Cooking dinner
      # Turn on kitchen countertop lights
      - service: light.turn_on
        data:
          entity_id: light.werkbladverlichting
          brightness: 255
      # Delay 1~10 seconds
      - delay: "00:00:{{ range(1,10)|random|int }}"
      # Turn on kitchen ceiling light
      - service: light.turn_on
        data:
          entity_id: light.fibaro_system_fgd212_dimmer_2_level_11
          brightness: 200
      # Delay 15~45 minutes
      - delay: "00:{{ range(15,44)|random|int }}:{{ range(1,59)|random|int }}"
      # Turn off kitchen ceiling light
      - service: light.turn_off
        entity_id: light.fibaro_system_fgd212_dimmer_2_level_11
      # Delay 1~10 seconds
      - delay: "00:00:{{ range(1,10)|random|int }}"
      # Turn down kitchen countertop lights
      - service: light.turn_on
        data:
          entity_id: light.werkbladverlichting
          brightness: 100
      # Delay 10~20 seconds
      - delay: "00:00:{{ range(10,20)|random|int }}"
    # Eating dinner
      # Turn on dining table light
      - service: light.turn_on
        data:
          entity_id: light.fibaro_system_fgd212_dimmer_2_level_2
          brightness: 100
      # Delay 10~30 minutes
      - delay: "00:{{ range(10,29)|random|int }}:{{ range(1,59)|random|int }}"
    # Cleaning up
      # Turn up kitchen countertop lights
      - service: light.turn_on
        data:
          entity_id: light.werkbladverlichting
          brightness: 200
      # Delay 1~2 minutes
      - delay: "00:{{ range(0,1)|random|int }}:{{ range(1,59)|random|int }}"
      # Turn off dining table light
      - service: light.turn_off
        entity_id: light.fibaro_system_fgd212_dimmer_2_level_2
      # Delay 10~20 seconds
      - delay: "00:00:{{ range(10,20)|random|int }}"
      # Turn down kitchen countertop lights
      - service: light.turn_on
        data:
          entity_id: light.werkbladverlichting
          brightness: 50
      # Delay 1~10 seconds
      - delay: "00:00:{{ range(1,10)|random|int }}"
    # Watching TV
      # Turn on TV lamp
      - service: light.turn_on
        data:
          entity_id: light.tv_lamp
          brightness: 50
      # Delay 1~10 minutes
      - delay: "00:{{ range(1,9)|random|int }}:{{ range(1,59)|random|int }}"
      # Turn down display cabinet lights
      - service: light.turn_on
        data:
          entity_id: light.kastverlichting
          brightness: 50
      # Delay 1~10 minutes
    # Random visits to the toilet/kitchen?
    # Waiting
      - wait_template: "{{ states('sensor.time') == state_attr('input_datetime.light_all_presence_simulation_sleeptime', 'timestamp')|int|timestamp_custom('%H:%M', false) }}"
    # Going upstairs
      # Turn on upstairs landing ceiling light
      # Delay 10-60 seconds
      - delay: "00:00:{{ range(10,60)|random|int }}"
      # Turn off all ground floor lights
      - service: light.turn_off
        entity_id: light.ground_floor_all
      # Delay 1-10 seconds
    # Going to bed
      # Turn on bathroom ceiling light
      # Delay 1~5 minutes
      # Turn off bathroom ceiling light
      # Delay 1~10 seconds
    # Going to bed
      # Turn off upstairs landing ceiling light
      # Delay 1~10 seconds
      # Turn on bedroom ceiling light
      # Delay 1~10 seconds
      # Turn on bedside lamp
      # Delay 1~10 seconds
      # Turn off bedroom ceiling light
      # Delay 1~15 minutes
      # Turn off bedside lamp

##
# Customize
##
homeassistant:
  customize:
    automation.light_all_presence_simulation_morning_start:
      friendly_name: 'Aanwezigheidssimulatie start ochtendroutine'
      hidden: true

    automation.light_all_presence_simulation_evening_start:
      friendly_name: 'Aanwezigheidssimulatie start avondroutine'
      hidden: true

    automation.light_all_presence_simulation_stop:
      friendly_name: 'Aanwezigheidssimulatie stop'
      hidden: true

    input_datetime.light_all_presence_simulation_arrivaltime:
      friendly_name: 'Aanwezigheidssimulatie aankomsttijd'

    input_datetime.light_all_presence_simulation_departuretime:
      friendly_name: 'Aanwezigheidssimulatie vertrektijd'

    input_datetime.light_all_presence_simulation_sleeptime:
      friendly_name: 'Aanwezigheidssimulatie bedtijd'

    input_datetime.light_all_presence_simulation_waketime:
      friendly_name: 'Aanwezigheidssimulatie wektijd'

    script.light_all_presence_simulation_morning_routine:
      friendly_name: 'Aanwezigheidssimulatie ochtendroutine'
      hidden: true

    script.light_all_presence_simulation_evening_routine:
      friendly_name: 'Aanwezigheidssimulatie avondroutine'
      hidden: true
